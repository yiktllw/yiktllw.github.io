import{c as m}from"./copy-BNUq0S91.js";import{d as H,r as x,n as I,b as D,c as r,a as t,e as $,t as o,u as i,f as j,g as n,h as F,F as c,i as v,o as u}from"./index-BgJE6vnw.js";import"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs";const G={class:"blog-info"},T={class:"blog-title"},M={class:"info"},N={class:"create-time"},S={class:"last-update"},P={class:"reading-time"},O={key:0,class:"category"},L={key:1,class:"series"},U=["data-open"],z={class:"line-numbers"},R={class:"top-line"},Y=["src"],_=["data-open"],q={class:"line-numbers"},J={class:"top-line"},K=["src"],Q=["data-open"],W={class:"line-numbers"},X={class:"top-line"},Z=["src"],tt=["data-open"],st={class:"line-numbers"},lt={class:"top-line"},nt=["src"],it=["data-open"],ot={class:"line-numbers"},et={class:"top-line"},at=["src"],rt=["data-open"],ut={class:"line-numbers"},dt={class:"top-line"},pt=["src"],vt=H({__name:"about",setup(gt){const y=x(),d=document.createElement("script");d.src="https://utteranc.es/client.js",d.setAttribute("repo","yiktllw/yiktllw.github.io"),d.setAttribute("issue-term","about"),d.setAttribute("label","💬comment"),d.setAttribute("theme",`github-${window.theme??"dark"}`),d.setAttribute("crossorigin","anonymous"),d.setAttribute("async","true"),I(()=>{var a,s,f;(a=y.value)==null||a.appendChild(d),(s=window.mermaid)==null||s.initialize({startOnLoad:!1,theme:window.theme==="dark"?"dark":"default"}),(f=window.mermaid)==null||f.run()});const e=D.find(a=>a.component==="@/blogs/about.vue");document.title=(e==null?void 0:e.blogInfo.title)??"yiktllw的博客";const V=[`git clone https://github.com/你的用户名/仓库名.git
`,`bun add -g vite
`,`bun install
`,`bun watch
`,`bun run build  # 生成静态文件
bun run preview  # 本地预览生产环境效果
`,`git add .
git commit -m "更新博客内容"
git push origin main
`],g=a=>{const s=V[a];navigator.clipboard.writeText(s)},p=x([!0,!0,!0,!0,!0,!0]),b=a=>{p.value[a]=!p.value[a]};return(a,s)=>{var f,E,k,h,A,w,C,B;return u(),r("div",{class:"blog",ref_key:"blog",ref:y},[t("div",G,[t("h1",T,o(((f=i(e))==null?void 0:f.blogInfo.title)??"Untitled"),1),t("div",M,[t("span",N,[s[12]||(s[12]=t("span",{class:"ele-title"},"发布于：",-1)),n(o(i(F)(((E=i(e))==null?void 0:E.blogInfo.createTime)??0)),1)]),t("span",S,[s[13]||(s[13]=t("span",{class:"ele-title"},"修改于：",-1)),n(o(i(F)(((k=i(e))==null?void 0:k.blogInfo.lastUpdate)??0)),1)]),t("span",P,[s[14]||(s[14]=t("span",{class:"ele-title"},"阅读时长：",-1)),n(o((h=i(e))==null?void 0:h.blogInfo.readingTime)+"分钟 ",1)]),((A=i(e))==null?void 0:A.blogInfo.category)!=="default"?(u(),r("span",O,[s[15]||(s[15]=t("span",{class:"ele-title"},"分类：",-1)),n(o((w=i(e))==null?void 0:w.blogInfo.category),1)])):j("",!0),(C=i(e))!=null&&C.blogInfo.series.enable?(u(),r("span",L,[s[16]||(s[16]=t("span",{class:"ele-title"},"系列：",-1)),n(o((B=i(e))==null?void 0:B.blogInfo.series.name),1)])):j("",!0),s[17]||(s[17]=t("span",{class:"copy-right"},[t("span",{class:"ele-title"},"许可协议："),t("p",{"xmlns:cc":"http://creativecommons.org/ns#"},[t("a",{href:"https://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1",target:"_blank",rel:"license noopener noreferrer",style:{display:"inline-block"}},[n("CC BY-NC-SA 4.0"),t("img",{style:{height:"22px !important","margin-left":"3px","vertical-align":"text-bottom"},src:"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1",alt:""}),t("img",{style:{height:"22px !important","margin-left":"3px","vertical-align":"text-bottom"},src:"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1",alt:""}),t("img",{style:{height:"22px !important","margin-left":"3px","vertical-align":"text-bottom"},src:"https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1",alt:""}),t("img",{style:{height:"22px !important","margin-left":"3px","vertical-align":"text-bottom"},src:"https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1",alt:""})])])],-1))])]),s[34]||(s[34]=$('<p> 本博客通过GitHub Actions从<a href="https://github.com/yiktllw/yiktllw.github.io">yiktllw.github.io</a>仓库自动构建，未采用任何现有博客框架，旨在兼顾Markdown的编写便利性与开发自由度。 </p><p>技术方案如下：</p><ol><li>以Vue为基础框架</li><li> 编写TypeScript脚本实现： <ul><li> 核心脚本：将Markdown解析为Vue组件，自动生成路由配置和文章元数据 </li><li> 辅助脚本：实时监听Markdown文件变更并同步更新Vue文件，支持开发热更新 </li></ul></li><li>通过GitHub Actions实现自动化部署</li></ol><p><strong>以下为使用本项目构建个人博客的过程。</strong></p><h2 id="%E7%9B%AE%E5%BD%95" tabindex="-1">目录</h2><p><a href="#1.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">1. 准备工作</a><br><a href="#2.%E5%90%AF%E5%8A%A8%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1">2. 启动开发服务</a><br><a href="#3.%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0">3. 编写博客文章</a><br><a href="#4.%E5%8F%91%E5%B8%83%E5%88%B0-github-pages">4. 发布到GitHub Pages</a><br><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">5. 注意事项</a></p><h2 id="1.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C" tabindex="-1"> 1.准备工作 </h2>',7)),t("ol",null,[t("li",null,[s[21]||(s[21]=t("p",null,[t("strong",null,"克隆仓库")],-1)),t("ul",null,[s[20]||(s[20]=t("li",null,"Fork 本项目到你的 GitHub 账户",-1)),t("li",null,[s[19]||(s[19]=n(" 将项目源码克隆到本地： ")),t("pre",null,[t("code",{"data-open":p.value[0],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[t("div",z,[(u(),r(c,null,v(1,l=>t("span",null,o(l),1)),64))]),t("div",R,[t("div",{onClick:s[0]||(s[0]=l=>b(0)),class:"language"},"bash"),t("div",{class:"copy-button",onClick:s[1]||(s[1]=l=>g(0))},[t("img",{class:"copy-img",src:i(m)},null,8,Y)])]),s[18]||(s[18]=t("div",{class:"code"},[n("git "),t("span",{class:"hljs-built_in"},"clone"),n(` https://github.com/你的用户名/仓库名.git
`)],-1))],8,U)])])])]),t("li",null,[s[25]||(s[25]=t("p",null,[t("strong",null,"环境配置")],-1)),t("ul",null,[s[24]||(s[24]=t("li",null,[n(" 安装 Bun 运行时环境 ("),t("a",{href:"https://bun.sh/docs/installation"},"官方安装指南"),n(") ")],-1)),t("li",null,[s[23]||(s[23]=n(" 安装 Vite 构建工具： ")),t("pre",null,[t("code",{"data-open":p.value[1],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[t("div",q,[(u(),r(c,null,v(1,l=>t("span",null,o(l),1)),64))]),t("div",J,[t("div",{onClick:s[2]||(s[2]=l=>b(1)),class:"language"},"bash"),t("div",{class:"copy-button",onClick:s[3]||(s[3]=l=>g(1))},[t("img",{class:"copy-img",src:i(m)},null,8,K)])]),s[22]||(s[22]=t("div",{class:"code"},`bun add -g vite
`,-1))],8,_)])])])]),t("li",null,[s[27]||(s[27]=t("p",null,[t("strong",null,"安装依赖")],-1)),t("pre",null,[t("code",{"data-open":p.value[2],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[t("div",W,[(u(),r(c,null,v(1,l=>t("span",null,o(l),1)),64))]),t("div",X,[t("div",{onClick:s[4]||(s[4]=l=>b(2)),class:"language"},"bash"),t("div",{class:"copy-button",onClick:s[5]||(s[5]=l=>g(2))},[t("img",{class:"copy-img",src:i(m)},null,8,Z)])]),s[26]||(s[26]=t("div",{class:"code"},`bun install
`,-1))],8,Q)])])]),s[35]||(s[35]=t("h2",{id:"2.%E5%90%AF%E5%8A%A8%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1",tabindex:"-1"}," 2.启动开发服务 ",-1)),s[36]||(s[36]=t("p",null,[t("strong",null,"启动文件监听和开发服务器"),n("：")],-1)),t("pre",null,[t("code",{"data-open":p.value[3],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[t("div",st,[(u(),r(c,null,v(1,l=>t("span",null,o(l),1)),64))]),t("div",lt,[t("div",{onClick:s[6]||(s[6]=l=>b(3)),class:"language"},"bash"),t("div",{class:"copy-button",onClick:s[7]||(s[7]=l=>g(3))},[t("img",{class:"copy-img",src:i(m)},null,8,nt)])]),s[28]||(s[28]=t("div",{class:"code"},`bun watch
`,-1))],8,tt)]),s[37]||(s[37]=$('<p> 在脚本自动修改路由配置时，Vite默认的窗口刷新会影响编辑体验，已禁用该特性。若新增了md文件，请在运行服务的终端窗口中按 <kbd>r</kbd> + <kbd>Enter</kbd>强制HMR更新，即可预览新文件。 </p><p><strong>配置评论系统</strong></p><p> 安装<a href="https://github.com/apps/utterances">utteranc</a>到fork的仓库，并修改项目根目录的<code>.env</code>文件中对应的信息。 </p><h2 id="3.%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0" tabindex="-1"> 3.编写博客文章 </h2><ol><li>在项目根目录的 <code>/blogs</code> 文件夹中新建 Markdown 文件</li><li> 系统会自动完成： <ul><li>Markdown → Vue 组件转换（生成至 <code>/src/blogs</code>）</li><li>自动注册路由 <code>/blog/文件名</code></li></ul></li><li>编辑 <code>/src/blogs.json</code> 配置文章标题</li></ol><h2 id="4.%E5%8F%91%E5%B8%83%E5%88%B0-github-pages" tabindex="-1"> 4.发布到 GitHub Pages </h2>',6)),t("ol",null,[t("li",null,[s[30]||(s[30]=t("p",null,[t("strong",null,"本地构建预览"),n("：")],-1)),t("pre",null,[t("code",{"data-open":p.value[4],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[t("div",ot,[(u(),r(c,null,v(2,l=>t("span",null,o(l),1)),64))]),t("div",et,[t("div",{onClick:s[8]||(s[8]=l=>b(4)),class:"language"},"bash"),t("div",{class:"copy-button",onClick:s[9]||(s[9]=l=>g(4))},[t("img",{class:"copy-img",src:i(m)},null,8,at)])]),s[29]||(s[29]=t("div",{class:"code"},[n("bun run build  "),t("span",{class:"hljs-comment"},"# 生成静态文件"),n(`
bun run preview  `),t("span",{class:"hljs-comment"},"# 本地预览生产环境效果"),n(`
`)],-1))],8,it)])]),t("li",null,[s[32]||(s[32]=t("p",null,[t("strong",null,"部署到 GitHub"),n("：")],-1)),t("pre",null,[t("code",{"data-open":p.value[5],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[t("div",ut,[(u(),r(c,null,v(3,l=>t("span",null,o(l),1)),64))]),t("div",dt,[t("div",{onClick:s[10]||(s[10]=l=>b(5)),class:"language"},"bash"),t("div",{class:"copy-button",onClick:s[11]||(s[11]=l=>g(5))},[t("img",{class:"copy-img",src:i(m)},null,8,pt)])]),s[31]||(s[31]=t("div",{class:"code"},[n(`git add .
git commit -m `),t("span",{class:"hljs-string"},'"更新博客内容"'),n(`
git push origin main
`)],-1))],8,rt)])]),s[33]||(s[33]=t("li",null,[t("p",null,"自动部署流程："),t("ul",null,[t("li",null,"GitHub Actions 会自动触发部署"),t("li",null,[n(" 部署完成后访问 "),t("code",null,"https://你的用户名.github.io/仓库名")])])],-1))]),s[38]||(s[38]=t("h2",{id:"%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9",tabindex:"-1"},"注意事项",-1)),s[39]||(s[39]=t("ol",null,[t("li",null,[n("保持文件监听服务 ("),t("code",null,"bun watch"),n(") 持续运行")]),t("li",null,"确保 GitHub 仓库已启用 Pages 服务（Settings → Pages）")],-1))],512)}}});export{vt as default};
