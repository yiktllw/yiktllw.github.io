import{c as f}from"./copy-BNUq0S91.js";import{d as G,r as S,n as F,o as M,b as R,c as p,a as s,e as A,t as o,u as e,h as t,F as c,j as g,f as k,g as B,i as L,k as u}from"./index-C7HD8lYF.js";import"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs";const q={class:"blog-container",ref:"container"},N={class:"blog-info"},P={class:"blog-title"},U=["data-open"],Y={class:"line-numbers"},z={class:"top-line"},J=["src"],K=["data-open"],Q={class:"line-numbers"},W={class:"top-line"},X=["src"],Z=["data-open"],ss={class:"line-numbers"},ns={class:"top-line"},ls=["src"],ts=["data-open"],es={class:"line-numbers"},is={class:"top-line"},as=["src"],os=["data-open"],rs={class:"line-numbers"},ps={class:"top-line"},us=["src"],ds=["data-open"],cs={class:"line-numbers"},gs={class:"top-line"},vs=["src"],ms=["data-open"],bs={class:"line-numbers"},ys={class:"top-line"},fs=["src"],hs=["data-open"],Es={class:"line-numbers"},ks={class:"top-line"},js=["src"],Ss={class:"sidebar-placeholder"},As={class:"sidebar-container"},Bs={class:"nav"},Cs={class:"nav-content"},ws={class:"article toc active",id:"article"},$s={class:"depth-0"},Os={class:"info"},Is={class:"create-time"},_s={class:"last-update"},Ds={class:"word-count"},Ts={class:"reading-time"},Hs={key:0,class:"category"},xs={key:1,class:"series"},Fs={key:2,class:"tags"},Rs=G({__name:"about",setup(Ls){const C=S(),h=S([]),v=S(0),w=()=>{const i=(document.documentElement.scrollTop||document.body.scrollTop)+100;let n=0;for(const[a,E]of h.value.entries())if(i>E)if(h.value[a+1]&&i<h.value[a+1]){n=a;break}else a===h.value.length-1&&(n=a);n!==v.value&&(v.value=n)};F(()=>{document.querySelectorAll(".blog h2, .blog h3, .blog h4, .blog h5, .blog h6").forEach(n=>{h.value.push(n.offsetTop)}),h.value.map(n=>-n),h.value.sort((n,a)=>n-a),document.addEventListener("scroll",w)}),M(()=>{document.removeEventListener("scroll",w)});const $=i=>{const n=document.getElementById(i),a=document.getElementById(i==="article"?"site":"article");a?(a.classList.remove("active"),n&&(n.style.display="block",n.style.position="absolute"),setTimeout(()=>{n&&(n.classList.add("active"),n.style.position="initial"),a.style.display="none"},200)):n&&n.classList.add("active");const E=document.getElementById("nav_"+i),j=document.getElementById("nav_"+(i==="article"?"site":"article"));E&&E.classList.add("selected"),j&&j.classList.remove("selected")},m=document.createElement("script");m.src="https://utteranc.es/client.js",m.setAttribute("repo","yiktllw/yiktllw.github.io"),m.setAttribute("issue-term","about"),m.setAttribute("label","💬comment"),m.setAttribute("theme",`github-${window.theme??"dark"}`),m.setAttribute("crossorigin","anonymous"),m.setAttribute("async","true"),F(()=>{var i,n,a;(i=C.value)==null||i.appendChild(m),(n=window.mermaid)==null||n.initialize({startOnLoad:!1,theme:window.theme==="dark"?"dark":"default"}),(a=window.mermaid)==null||a.run()});const r=R.find(i=>i.component==="@/blogs/about.vue");document.title=(r==null?void 0:r.blogInfo.title)??"yiktllw的博客";const V=[`git clone https://github.com/你的用户名/仓库名.git
`,`bun add -g vite
`,`bun install
`,`bun watch
`,`bun run build  # 生成静态文件
bun run preview  # 本地预览生产环境效果
`,`git add .
git commit -m "更新博客内容"
git push origin main
`,`- name: Setup aliyun oss
  uses: manyuanrong/setup-ossutil@v3.0
  with:
    endpoint: "oss-cn-hongkong.aliyuncs.com"
    access-key-id: \${{ secrets.OSS_ID }}
    access-key-secret: \${{ secrets.OSS_SECRET }}

- name: Clean OSS Bucket
  run: ossutil rm oss://yikt-net/ -r -f

- name: Deploy docs
  run: ossutil cp -rf ./dist oss://yikt-net/
`,`endpoint: "你的OSS端点服务器" # 修改 endpoint 值
access-key-id: \${{ secrets.OSS_ID }} # 保持变量名不变
access-key-secret: \${{ secrets.OSS_SECRET }} # 保持变量名不变
run: ossutil cp -rf ./dist oss://你的存储桶名称/ # 替换OSS地址
`],b=i=>{const n=V[i];navigator.clipboard.writeText(n)},d=S([!0,!0,!0,!0,!0,!0,!0,!0]),y=i=>{d.value[i]=!d.value[i]};return(i,n)=>{var a,E,j,O,I,_,D,T,H,x;return u(),p("div",q,[s("div",{class:"blog",ref_key:"blog",ref:C},[s("div",N,[s("h1",P,o(((a=e(r))==null?void 0:a.blogInfo.title)??"Untitled"),1)]),n[36]||(n[36]=A('<p> 本博客通过 GitHub Actions 从 <a href="https://github.com/yiktllw/yiktllw.github.io">yiktllw.github.io</a> 仓库自动构建，未采用任何现有博客框架，旨在兼顾 Markdown 的编写便利性与开发自由度。 </p><p>技术方案如下：</p><ol><li>以 Vue 为基础框架</li><li> 编写 TypeScript 脚本实现： <ul><li> 核心脚本：将 Markdown 解析为 Vue 组件，自动生成路由配置和文章元数据 </li><li> 辅助脚本：实时监听 Markdown 文件变更并同步更新 Vue 文件，支持开发热更新 </li></ul></li><li>通过 GitHub Actions 实现自动化部署</li></ol><p><strong>以下为使用本项目构建个人博客的过程。</strong></p><h2 id="%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C" tabindex="-1">准备工作</h2>',5)),s("ol",null,[s("li",null,[n[21]||(n[21]=s("p",null,[s("strong",null,"克隆仓库")],-1)),s("ul",null,[n[20]||(n[20]=s("li",null,"Fork 本项目到你的 GitHub 账户",-1)),s("li",null,[n[19]||(n[19]=t(" 将项目源码克隆到本地： ")),s("pre",null,[s("code",{"data-open":d.value[0],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[s("div",Y,[(u(),p(c,null,g(1,l=>s("span",null,o(l),1)),64))]),s("div",z,[s("div",{onClick:n[0]||(n[0]=l=>y(0)),class:"language"},"<BASH>"),s("div",{class:"copy-button",onClick:n[1]||(n[1]=l=>b(0))},[s("img",{class:"copy-img",src:e(f)},null,8,J)])]),n[18]||(n[18]=s("div",{class:"code"},[t("git "),s("span",{class:"hljs-built_in"},"clone"),t(` https://github.com/你的用户名/仓库名.git
`)],-1))],8,U)])])])]),s("li",null,[n[25]||(n[25]=s("p",null,[s("strong",null,"环境配置")],-1)),s("ul",null,[n[24]||(n[24]=s("li",null,[t(" 安装 Bun 运行时环境 ("),s("a",{href:"https://bun.sh/docs/installation"},"官方安装指南"),t(") ")],-1)),s("li",null,[n[23]||(n[23]=t(" 安装 Vite 构建工具： ")),s("pre",null,[s("code",{"data-open":d.value[1],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[s("div",Q,[(u(),p(c,null,g(1,l=>s("span",null,o(l),1)),64))]),s("div",W,[s("div",{onClick:n[2]||(n[2]=l=>y(1)),class:"language"},"<BASH>"),s("div",{class:"copy-button",onClick:n[3]||(n[3]=l=>b(1))},[s("img",{class:"copy-img",src:e(f)},null,8,X)])]),n[22]||(n[22]=s("div",{class:"code"},`bun add -g vite
`,-1))],8,K)])])])]),s("li",null,[n[27]||(n[27]=s("p",null,[s("strong",null,"安装依赖")],-1)),s("pre",null,[s("code",{"data-open":d.value[2],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[s("div",ss,[(u(),p(c,null,g(1,l=>s("span",null,o(l),1)),64))]),s("div",ns,[s("div",{onClick:n[4]||(n[4]=l=>y(2)),class:"language"},"<BASH>"),s("div",{class:"copy-button",onClick:n[5]||(n[5]=l=>b(2))},[s("img",{class:"copy-img",src:e(f)},null,8,ls)])]),n[26]||(n[26]=s("div",{class:"code"},`bun install
`,-1))],8,Z)])])]),n[37]||(n[37]=s("h2",{id:"%E5%90%AF%E5%8A%A8%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1",tabindex:"-1"}," 启动开发服务 ",-1)),n[38]||(n[38]=s("p",null,[s("strong",null,"启动文件监听和开发服务器"),t("：")],-1)),s("pre",null,[s("code",{"data-open":d.value[3],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[s("div",es,[(u(),p(c,null,g(1,l=>s("span",null,o(l),1)),64))]),s("div",is,[s("div",{onClick:n[6]||(n[6]=l=>y(3)),class:"language"},"<BASH>"),s("div",{class:"copy-button",onClick:n[7]||(n[7]=l=>b(3))},[s("img",{class:"copy-img",src:e(f)},null,8,as)])]),n[28]||(n[28]=s("div",{class:"code"},`bun watch
`,-1))],8,ts)]),n[39]||(n[39]=A('<p> 在脚本自动修改路由配置时，Vite 默认的窗口刷新会影响编辑体验，已禁用该特性。若新增了 md 文件，请在运行服务的终端窗口中按 <kbd>r</kbd> + <kbd>Enter</kbd> 强制 HMR 更新，即可预览新文件。 </p><p><strong>配置评论系统</strong></p><p> 安装 <a href="https://github.com/apps/utterances">utteranc</a> 到 fork 的仓库，并修改项目根目录的 <code>.env</code> 文件中对应的信息。 </p><h2 id="%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0" tabindex="-1"> 编写博客文章 </h2><ol><li>在项目根目录的 <code>/blogs</code> 文件夹中新建 Markdown 文件</li><li> 系统会自动完成： <ul><li>Markdown → Vue 组件转换（生成至 <code>/src/blogs</code>）</li><li>自动注册路由 <code>/blog/文件名</code></li></ul></li><li>编辑 <code>/src/blogs.json</code> 配置文章标题</li></ol><h2 id="%E5%8F%91%E5%B8%83%E5%88%B0-github-pages" tabindex="-1"> 发布到 GitHub Pages </h2>',6)),s("ol",null,[s("li",null,[n[30]||(n[30]=s("p",null,[s("strong",null,"本地构建预览"),t("：")],-1)),s("pre",null,[s("code",{"data-open":d.value[4],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[s("div",rs,[(u(),p(c,null,g(2,l=>s("span",null,o(l),1)),64))]),s("div",ps,[s("div",{onClick:n[8]||(n[8]=l=>y(4)),class:"language"},"<BASH>"),s("div",{class:"copy-button",onClick:n[9]||(n[9]=l=>b(4))},[s("img",{class:"copy-img",src:e(f)},null,8,us)])]),n[29]||(n[29]=s("div",{class:"code"},[t("bun run build  "),s("span",{class:"hljs-comment"},"# 生成静态文件"),t(`
bun run preview  `),s("span",{class:"hljs-comment"},"# 本地预览生产环境效果"),t(`
`)],-1))],8,os)])]),s("li",null,[n[32]||(n[32]=s("p",null,[s("strong",null,"部署到 GitHub"),t("：")],-1)),s("pre",null,[s("code",{"data-open":d.value[5],class:"hljs language-bash",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[s("div",cs,[(u(),p(c,null,g(3,l=>s("span",null,o(l),1)),64))]),s("div",gs,[s("div",{onClick:n[10]||(n[10]=l=>y(5)),class:"language"},"<BASH>"),s("div",{class:"copy-button",onClick:n[11]||(n[11]=l=>b(5))},[s("img",{class:"copy-img",src:e(f)},null,8,vs)])]),n[31]||(n[31]=s("div",{class:"code"},[t(`git add .
git commit -m `),s("span",{class:"hljs-string"},'"更新博客内容"'),t(`
git push origin main
`)],-1))],8,ds)])]),n[33]||(n[33]=s("li",null,[s("p",null,"自动部署流程："),s("ul",null,[s("li",null,"GitHub Actions 会自动触发部署"),s("li",null,[t(" 部署完成后访问 "),s("code",null,"https://你的用户名.github.io/仓库名")])])],-1))]),n[40]||(n[40]=s("h2",{id:"%E9%83%A8%E7%BD%B2%E5%88%B0-oss-%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5",tabindex:"-1"}," 部署到 OSS 静态网页 ",-1)),n[41]||(n[41]=s("p",null,[s("strong",null,"没有 OSS 需求时"),s("br"),t(" 删除 "),s("code",null,".github/wordflows/deploy.yml"),t(" 文件中以下内容： ")],-1)),s("pre",null,[s("code",{"data-open":d.value[6],class:"hljs language-yaml",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[s("div",bs,[(u(),p(c,null,g(12,l=>s("span",null,o(l),1)),64))]),s("div",ys,[s("div",{onClick:n[12]||(n[12]=l=>y(6)),class:"language"},"<YAML>"),s("div",{class:"copy-button",onClick:n[13]||(n[13]=l=>b(6))},[s("img",{class:"copy-img",src:e(f)},null,8,fs)])]),n[34]||(n[34]=A(`<div class="code"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">aliyun</span> <span class="hljs-string">oss</span>
  <span class="hljs-attr">uses:</span> <span class="hljs-string">manyuanrong/setup-ossutil@v3.0</span>
  <span class="hljs-attr">with:</span>
    <span class="hljs-attr">endpoint:</span> <span class="hljs-string">&quot;oss-cn-hongkong.aliyuncs.com&quot;</span>
    <span class="hljs-attr">access-key-id:</span> <span class="hljs-string">\${{</span> <span class="hljs-string">secrets.OSS_ID</span> <span class="hljs-string">}}</span>
    <span class="hljs-attr">access-key-secret:</span> <span class="hljs-string">\${{</span> <span class="hljs-string">secrets.OSS_SECRET</span> <span class="hljs-string">}}</span>

<span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Clean</span> <span class="hljs-string">OSS</span> <span class="hljs-string">Bucket</span>
  <span class="hljs-attr">run:</span> <span class="hljs-string">ossutil</span> <span class="hljs-string">rm</span> <span class="hljs-string">oss://yikt-net/</span> <span class="hljs-string">-r</span> <span class="hljs-string">-f</span>

<span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">docs</span>
  <span class="hljs-attr">run:</span> <span class="hljs-string">ossutil</span> <span class="hljs-string">cp</span> <span class="hljs-string">-rf</span> <span class="hljs-string">./dist</span> <span class="hljs-string">oss://yikt-net/</span>
</div>`,1))],8,ms)]),n[42]||(n[42]=s("p",null,[s("strong",null,"需要 OSS 部署时")],-1)),n[43]||(n[43]=s("ol",null,[s("li",null,"配置参数修改：")],-1)),s("pre",null,[s("code",{"data-open":d.value[7],class:"hljs language-yaml",style:{"font-family":"yiktllw-code, serif",position:"relative"}},[s("div",Es,[(u(),p(c,null,g(4,l=>s("span",null,o(l),1)),64))]),s("div",ks,[s("div",{onClick:n[14]||(n[14]=l=>y(7)),class:"language"},"<YAML>"),s("div",{class:"copy-button",onClick:n[15]||(n[15]=l=>b(7))},[s("img",{class:"copy-img",src:e(f)},null,8,js)])]),n[35]||(n[35]=A(`<div class="code"><span class="hljs-attr">endpoint:</span> <span class="hljs-string">&quot;你的OSS端点服务器&quot;</span> <span class="hljs-comment"># 修改 endpoint 值</span>
<span class="hljs-attr">access-key-id:</span> <span class="hljs-string">\${{</span> <span class="hljs-string">secrets.OSS_ID</span> <span class="hljs-string">}}</span> <span class="hljs-comment"># 保持变量名不变</span>
<span class="hljs-attr">access-key-secret:</span> <span class="hljs-string">\${{</span> <span class="hljs-string">secrets.OSS_SECRET</span> <span class="hljs-string">}}</span> <span class="hljs-comment"># 保持变量名不变</span>
<span class="hljs-attr">run:</span> <span class="hljs-string">ossutil</span> <span class="hljs-string">cp</span> <span class="hljs-string">-rf</span> <span class="hljs-string">./dist</span> <span class="hljs-string">oss://你的存储桶名称/</span> <span class="hljs-comment"># 替换OSS地址</span>
</div>`,1))],8,hs)]),n[44]||(n[44]=s("ol",{start:"2"},[s("li",null,[t(" GitHub 仓库中添加 Secrets: "),s("code",null,"OSS_ID"),t(" 和 "),s("code",null,"OSS_SECRET")])],-1)),n[45]||(n[45]=s("h2",{id:"%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9",tabindex:"-1"},"注意事项",-1)),n[46]||(n[46]=s("ol",null,[s("li",null,[t("保持文件监听服务 ("),s("code",null,"bun watch"),t(") 持续运行")]),s("li",null,"确保 GitHub 仓库已启用 Pages 服务（Settings → Pages）")],-1))],512),s("div",Ss,[s("div",As,[s("div",Bs,[s("div",{class:"nav-item selected",id:"nav_article",onClick:n[16]||(n[16]=l=>$("article"))}," 文章信息 "),s("div",{class:"nav-item",id:"nav_site",onClick:n[17]||(n[17]=l=>$("site"))}," 站点概览 ")]),s("div",Cs,[s("div",ws,[n[55]||(n[55]=s("div",{class:"toc-title"},"目录",-1)),n[56]||(n[56]=s("div",{class:"progress-bar"},null,-1)),s("ul",$s,[s("li",null,[s("a",{href:"#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C",class:k(v.value===0?"active":"not-active")},"1 准备工作",2)]),s("li",null,[s("a",{href:"#%E5%90%AF%E5%8A%A8%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1",class:k(v.value===1?"active":"not-active")},"2 启动开发服务",2)]),s("li",null,[s("a",{href:"#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0",class:k(v.value===2?"active":"not-active")},"3 编写博客文章",2)]),s("li",null,[s("a",{href:"#%E5%8F%91%E5%B8%83%E5%88%B0-github-pages",class:k(v.value===3?"active":"not-active")},"4 发布到 GitHub Pages",2)]),s("li",null,[s("a",{href:"#%E9%83%A8%E7%BD%B2%E5%88%B0-oss-%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5",class:k(v.value===4?"active":"not-active")},"5 部署到 OSS 静态网页",2)]),s("li",null,[s("a",{href:"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9",class:k(v.value===5?"active":"not-active")},"6 注意事项",2)])]),s("div",Os,[s("span",Is,[n[47]||(n[47]=s("span",{class:"ele-title"},"创建于：",-1)),t(o(e(L)(((E=e(r))==null?void 0:E.blogInfo.createTime)??0)),1)]),s("span",_s,[n[48]||(n[48]=s("span",{class:"ele-title"},"修改于：",-1)),t(o(e(L)(((j=e(r))==null?void 0:j.blogInfo.lastUpdate)??0)),1)]),s("span",Ds,[n[49]||(n[49]=s("span",{class:"ele-title"},"本文字数：",-1)),t(o((O=e(r))==null?void 0:O.blogInfo.wordCount)+"字 ",1)]),s("span",Ts,[n[50]||(n[50]=s("span",{class:"ele-title"},"预计阅读时间：",-1)),t(o((I=e(r))==null?void 0:I.blogInfo.readingTime)+"分钟 ",1)]),((_=e(r))==null?void 0:_.blogInfo.category)!=="default"?(u(),p("span",Hs,[n[51]||(n[51]=s("span",{class:"ele-title"},"分类于：",-1)),t(o((D=e(r))==null?void 0:D.blogInfo.category),1)])):B("",!0),(T=e(r))!=null&&T.blogInfo.series.enable?(u(),p("span",xs,[n[52]||(n[52]=s("span",{class:"ele-title"},"系列：",-1)),t(o((H=e(r))==null?void 0:H.blogInfo.series.name),1)])):B("",!0),n[54]||(n[54]=s("span",{class:"copy-right"},[s("span",{class:"ele-title"},"许可协议："),s("p",{"xmlns:cc":"http://creativecommons.org/ns#"},[s("a",{href:"https://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1",target:"_blank",rel:"license noopener noreferrer",style:{display:"inline-block"}},"CC BY-NC-SA 4.0")])],-1)),e(r)&&e(r).blogInfo.tags.length>0?(u(),p("span",Fs,[n[53]||(n[53]=s("span",{class:"ele-title"},"标签：",-1)),(u(!0),p(c,null,g((x=e(r))==null?void 0:x.blogInfo.tags,l=>(u(),p("span",{class:"tag",key:l},o(l),1))),128))])):B("",!0)])]),n[57]||(n[57]=s("div",{class:"site",id:"site"},"标签2的内容",-1))])])])],512)}}});export{Rs as default};
