import{d as h,r as E,n as k,b as w,c as A,a as t,e as c,t as p,u as i,f as l,g as y,o as x}from"./index-FaOUy76e.js";import"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs";const a="data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'?%3e%3csvg%20id='_图层_1'%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201034%201034'%3e%3cdefs%3e%3cstyle%3e.cls-1{fill:none;stroke:%23fff;stroke-miterlimit:10;stroke-width:60px;}.cls-2{fill:%23fff;stroke-width:0px;}%3c/style%3e%3c/defs%3e%3cg%20id='_复制'%3e%3cpath%20class='cls-1'%20d='m121,312v520s3,75,71,75h435s86,5,86-81V312s-3-63-63-63H210s-89-10-89,63Z'/%3e%3cpath%20class='cls-1'%20d='m321,251v-107s11-36,58-36h405s96.5,3,96.5,96.5v474.5s-15,77.75-77.75,77.75h-62.75'/%3e%3crect%20class='cls-2'%20x='259'%20y='445'%20width='334'%20height='60'%20rx='25.5'%20ry='25.5'/%3e%3crect%20class='cls-2'%20x='259'%20y='645'%20width='334'%20height='60'%20rx='25.5'%20ry='25.5'/%3e%3c/g%3e%3c/svg%3e",B={class:"blog-info"},C={class:"blog-title"},j={class:"info"},F={clas:"author"},H={class:"create-time"},V={class:"last-update"},D={class:"hljs",style:{"font-family":"yiktllw-code, serif"}},G=["src"],T={class:"hljs",style:{"font-family":"yiktllw-code, serif"}},$=["src"],M={class:"hljs",style:{"font-family":"yiktllw-code, serif"}},S=["src"],I={class:"hljs",style:{"font-family":"yiktllw-code, serif"}},N=["src"],P={class:"hljs",style:{"font-family":"yiktllw-code, serif"}},U=["src"],q={class:"hljs",style:{"font-family":"yiktllw-code, serif"}},z=["src"],Y=h({__name:"about",setup(L){const m=E(),v="yiktllw",n=document.createElement("script");n.src="https://utteranc.es/client.js",n.setAttribute("repo","yiktllw/yiktllw.github.io"),n.setAttribute("issue-term","about"),n.setAttribute("label","💬comment"),n.setAttribute("theme",`github-${window.theme??"dark"}`),n.setAttribute("crossorigin","anonymous"),n.setAttribute("async","true"),k(()=>{var o,s,d;(o=m.value)==null||o.appendChild(n),(s=window.mermaid)==null||s.initialize({startOnLoad:!1,theme:window.theme==="dark"?"dark":"default"}),(d=window.mermaid)==null||d.run()});const e=w.find(o=>o.component==="@/blogs/about.vue");document.title=(e==null?void 0:e.blogInfo.title)??"yiktllw的博客";const f=["git clone https://github.com/你的用户名/仓库名.git","git clone https://github.com/你的用户名/仓库名.git","bun add -g vite","bun add -g vite","bun install","bun install","bun watch","bun watch",`bun run build  # 生成静态文件
bun run preview  # 本地预览生产环境效果`,`bun run build  # 生成静态文件
bun run preview  # 本地预览生产环境效果`,`git add .
git commit -m "更新博客内容"
git push origin main`,`git add .
git commit -m "更新博客内容"
git push origin main`],r=o=>{const s=f[o];navigator.clipboard.writeText(s)};return(o,s)=>{var d,g,b;return x(),A("div",{class:"blog",ref_key:"blog",ref:m},[t("div",B,[t("h1",C,p(((d=i(e))==null?void 0:d.blogInfo.title)??"Untitled"),1),t("div",j,[t("span",F,[s[6]||(s[6]=t("span",{class:"ele-title"},"作者：",-1)),l(p(i(v)||"无名"),1)]),t("span",H,[s[7]||(s[7]=t("span",{class:"ele-title"},"创建时间：",-1)),l(p(i(y)(((g=i(e))==null?void 0:g.blogInfo.createTime)??0)),1)]),t("span",V,[s[8]||(s[8]=t("span",{class:"ele-title"},"最后修改：",-1)),l(p(i(y)(((b=i(e))==null?void 0:b.blogInfo.lastUpdate)??0)),1)]),s[9]||(s[9]=t("span",{class:"copy-right"},[t("span",{class:"ele-title"},"许可协议："),t("p",{"xmlns:cc":"http://creativecommons.org/ns#"},[t("a",{href:"https://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1",target:"_blank",rel:"license noopener noreferrer",style:{display:"inline-block"}},[l("CC BY-NC-SA 4.0"),t("img",{style:{height:"22px !important","margin-left":"3px","vertical-align":"text-bottom"},src:"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1",alt:""}),t("img",{style:{height:"22px !important","margin-left":"3px","vertical-align":"text-bottom"},src:"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1",alt:""}),t("img",{style:{height:"22px !important","margin-left":"3px","vertical-align":"text-bottom"},src:"https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1",alt:""}),t("img",{style:{height:"22px !important","margin-left":"3px","vertical-align":"text-bottom"},src:"https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1",alt:""})])])],-1))])]),s[26]||(s[26]=c('<p> 本博客通过GitHub Actions从<a href="https://github.com/yiktllw/yiktllw.github.io">yiktllw.github.io</a>仓库自动构建，未采用任何现有博客框架，旨在兼顾Markdown的编写便利性与开发自由度。 </p><p>技术方案如下：</p><ol><li>以Vue为基础框架</li><li> 编写TypeScript脚本实现： <ul><li> 核心脚本：将Markdown解析为Vue组件，自动生成路由配置和文章元数据 </li><li> 辅助脚本：实时监听Markdown文件变更并同步更新Vue文件，支持开发热更新 </li></ul></li><li>通过GitHub Actions实现自动化部署</li></ol><p><strong>以下为使用本项目构建个人博客的过程。</strong></p><h2 id="%E7%9B%AE%E5%BD%95" tabindex="-1">目录</h2><p><a href="#1.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">1. 准备工作</a><br><a href="#2.%E5%90%AF%E5%8A%A8%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1">2. 启动开发服务</a><br><a href="#3.%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0">3. 编写博客文章</a><br><a href="#4.%E5%8F%91%E5%B8%83%E5%88%B0-github-pages">4. 发布到GitHub Pages</a><br><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">5. 注意事项</a></p><h2 id="1.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C" tabindex="-1"> 1.准备工作 </h2>',7)),t("ol",null,[t("li",null,[s[13]||(s[13]=t("p",null,[t("strong",null,"克隆仓库")],-1)),t("ul",null,[s[12]||(s[12]=t("li",null,"Fork 本项目到你的 GitHub 账户",-1)),t("li",null,[s[11]||(s[11]=l(" 将项目源码克隆到本地： ")),t("pre",null,[t("code",D,[t("div",{class:"copy-button",onClick:s[0]||(s[0]=u=>r(0))},[t("img",{class:"copy-img g-icon",src:i(a)},null,8,G)]),s[10]||(s[10]=t("details",{class:"code-details",open:"true"},[t("summary",null,"bash"),t("div",{class:"line"},[l("git "),t("span",{class:"hljs-built_in"},"clone"),l(" https://github.com/你的用户名/仓库名.git")])],-1))])])])])]),t("li",null,[s[17]||(s[17]=t("p",null,[t("strong",null,"环境配置")],-1)),t("ul",null,[s[16]||(s[16]=t("li",null,[l(" 安装 Bun 运行时环境 ("),t("a",{href:"https://bun.sh/docs/installation"},"官方安装指南"),l(") ")],-1)),t("li",null,[s[15]||(s[15]=l(" 安装 Vite 构建工具： ")),t("pre",null,[t("code",T,[t("div",{class:"copy-button",onClick:s[1]||(s[1]=u=>r(2))},[t("img",{class:"copy-img g-icon",src:i(a)},null,8,$)]),s[14]||(s[14]=t("details",{class:"code-details",open:"true"},[t("summary",null,"bash"),t("div",{class:"line"},"bun add -g vite")],-1))])])])])]),t("li",null,[s[19]||(s[19]=t("p",null,[t("strong",null,"安装依赖")],-1)),t("pre",null,[t("code",M,[t("div",{class:"copy-button",onClick:s[2]||(s[2]=u=>r(4))},[t("img",{class:"copy-img g-icon",src:i(a)},null,8,S)]),s[18]||(s[18]=t("details",{class:"code-details",open:"true"},[t("summary",null,"bash"),t("div",{class:"line"},"bun install")],-1))])])])]),s[27]||(s[27]=t("h2",{id:"2.%E5%90%AF%E5%8A%A8%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1",tabindex:"-1"}," 2.启动开发服务 ",-1)),s[28]||(s[28]=t("p",null,[t("strong",null,"启动文件监听和开发服务器"),l("：")],-1)),t("pre",null,[t("code",I,[t("div",{class:"copy-button",onClick:s[3]||(s[3]=u=>r(6))},[t("img",{class:"copy-img g-icon",src:i(a)},null,8,N)]),s[20]||(s[20]=t("details",{class:"code-details",open:"true"},[t("summary",null,"bash"),t("div",{class:"line"},"bun watch")],-1))])]),s[29]||(s[29]=c('<p> 在脚本自动修改路由配置时，Vite默认的窗口刷新会影响编辑体验，已禁用该特性。若新增了md文件，请在运行服务的终端窗口中按 <kbd>r</kbd> + <kbd>Enter</kbd>强制HMR更新，即可预览新文件。 </p><p><strong>配置评论系统</strong></p><p> 安装<a href="https://github.com/apps/utterances">utteranc</a>到fork的仓库，并修改项目根目录的<code>.env</code>文件中对应的信息。 </p><h2 id="3.%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0" tabindex="-1"> 3.编写博客文章 </h2><ol><li>在项目根目录的 <code>/blogs</code> 文件夹中新建 Markdown 文件</li><li> 系统会自动完成： <ul><li>Markdown → Vue 组件转换（生成至 <code>/src/blogs</code>）</li><li>自动注册路由 <code>/blog/文件名</code></li></ul></li><li>编辑 <code>/src/blogs.json</code> 配置文章标题</li></ol><h2 id="4.%E5%8F%91%E5%B8%83%E5%88%B0-github-pages" tabindex="-1"> 4.发布到 GitHub Pages </h2>',6)),t("ol",null,[t("li",null,[s[22]||(s[22]=t("p",null,[t("strong",null,"本地构建预览"),l("：")],-1)),t("pre",null,[t("code",P,[t("div",{class:"copy-button",onClick:s[4]||(s[4]=u=>r(8))},[t("img",{class:"copy-img g-icon",src:i(a)},null,8,U)]),s[21]||(s[21]=c('<details class="code-details" open="true"><summary>bash</summary><div class="line">bun run build  <span class="hljs-comment"># 生成静态文件</span></div><div class="line">bun run preview  <span class="hljs-comment"># 本地预览生产环境效果</span></div></details>',1))])])]),t("li",null,[s[24]||(s[24]=t("p",null,[t("strong",null,"部署到 GitHub"),l("：")],-1)),t("pre",null,[t("code",q,[t("div",{class:"copy-button",onClick:s[5]||(s[5]=u=>r(10))},[t("img",{class:"copy-img g-icon",src:i(a)},null,8,z)]),s[23]||(s[23]=c('<details class="code-details" open="true"><summary>bash</summary><div class="line">git add .</div><div class="line">git commit -m <span class="hljs-string">&quot;更新博客内容&quot;</span></div><div class="line">git push origin main</div></details>',1))])])]),s[25]||(s[25]=t("li",null,[t("p",null,"自动部署流程："),t("ul",null,[t("li",null,"GitHub Actions 会自动触发部署"),t("li",null,[l(" 部署完成后访问 "),t("code",null,"https://你的用户名.github.io/仓库名")])])],-1))]),s[30]||(s[30]=t("h2",{id:"%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9",tabindex:"-1"},"注意事项",-1)),s[31]||(s[31]=t("ol",null,[t("li",null,[l("保持文件监听服务 ("),t("code",null,"bun watch"),l(") 持续运行")]),t("li",null,"确保 GitHub 仓库已启用 Pages 服务（Settings → Pages）")],-1))],512)}}});export{Y as default};
